<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: R | Streaming Longitude]]></title>
  <link href="http://vinchinzu.github.io/blog/categories/r/atom.xml" rel="self"/>
  <link href="http://vinchinzu.github.io/"/>
  <updated>2014-02-11T10:55:24-06:00</updated>
  <id>http://vinchinzu.github.io/</id>
  <author>
    <name><![CDATA[Lucas Vinze]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Trade Network Graphs]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/05/trade-network-graphs/"/>
    <updated>2014-02-05T00:00:00-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/05/trade-network-graphs</id>
    <content type="html"><![CDATA[<h3>Step 1</h3>

<p>Gather data from UN Comtrade.
  1. Choose your</p>

<p><a href="http://comtrade.un.org/monthly/Main/Data.aspx">here</a>
Create a log-in and account
This allows downloads of 5000 lines each, so each query has to be small enough to account for this.
Design the query based on exporter, importer, commodity (ies), period, and trade flow (import/export).
Search for the appropriate HTS codes for the commodity classification.</p>

<h3>Step 2</h3>

<p>Open the R Console and process the source file:</p>

<p>This script will directly process the csv file downloaded from Comtrade.</p>

<p>Change the query file as needed.</p>

<p>{% highlight r %}
library(network)
library(plyr)</p>

<h1>setwd(&ldquo;./Downloads&rdquo;)</h1>

<p>df = read.csv(&ldquo;QueryResults (34).csv&rdquo;, header = TRUE,</p>

<pre><code>               stringsAsFactors = FALSE)
</code></pre>

<h2>Take only the trade</h2>

<p>Ex.df = subset(df,subset = TradeFlowDescription == &ldquo;Exports&rdquo;,</p>

<pre><code>               c("ReporterDescription", "PartnerDescription", "Value"))
</code></pre>

<p>Ex.df &lt;&ndash; Ex.df[!Ex.df$PartnerDescription == &ldquo;World&rdquo;,]
Ex.df &lt;&ndash; Ex.df[!Ex.df$ReporterDescription == &ldquo;EU-27&rdquo;,]</p>

<p>Ex.df$Value &lt;&ndash; Ex.df$Value/1000</p>

<h2>Sort the data and take only the top 80% of the trade</h2>

<p>Ex.df = arrange(Ex.df, desc(Value))</p>

<p>Ex.df$sWine = scale(Ex.df$Value, center = FALSE)
Ex.df$cs = cumsum(as.numeric(Ex.df$Value))
Ex.df[Ex.df[, 1] == &ldquo;China, Hong Kong SAR &rdquo;, 1] = &ldquo;China, Hong Kong SAR&rdquo;</p>

<h2>Adjust Top Percentage to be included</h2>

<p>Final.df = subset(Ex.df, cs &lt; tail(Ex.df$cs, 1) * 0.9)</p>

<h2>Set edge and arrow size</h2>

<p>Final.df$edgeSize = with(Final.df, Value/sum(Value))
Final.df$arrowSize = ifelse(Final.df$edgeSize * 30 &lt; 0.5 , 0.5,</p>

<pre><code>                            Final.df$edgeSize * 15)
</code></pre>

<h2>Create the network and plot</h2>

<p>net = network(Final.df[, 1:2])
plot(net, displaylabels = TRUE, label.col = &ldquo;steelblue&rdquo;,</p>

<pre><code> edge.lwd = c(Final.df$edgeSize) * 100,
 arrowhead.cex = c(Final.df$arrowSize),
 label.cex = 0.5, vertex.border = "white",
 vertex.col = "skyblue", edge.col = rgb(0, 0, 0, alpha = 0.5))
</code></pre>

<p>pdf(file=&lsquo;pdfplot&rsquo;)
plot(net, displaylabels = TRUE, label.col = &ldquo;steelblue&rdquo;,</p>

<pre><code> edge.lwd = c(Final.df$edgeSize) * 100,
 arrowhead.cex = c(Final.df$arrowSize),
 label.cex = 0.5, vertex.border = "white",
 vertex.col = "skyblue", edge.col = rgb(0, 0, 0, alpha = 0.5))
</code></pre>

<p>dev.off()</p>

<p>{% endhighlight %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog With Knitr and Jekyll]]></title>
    <link href="http://vinchinzu.github.io/blog/2012/07/03/knitr-jekyll/"/>
    <updated>2012-07-03T00:00:00-05:00</updated>
    <id>http://vinchinzu.github.io/blog/2012/07/03/knitr-jekyll</id>
    <content type="html"><![CDATA[<p>The <a href="http://yihui.name/knitr/">knitr</a> package provides an easy way to embed
<a href="http://www.r-project.org/">R</a> code in a <a href="http://jekyllbootstrap.com/">Jekyll-Bootstrap</a>
blog post. The only required input is an <strong>R Markdown</strong> source file.
The name of the source file used to generate this post is <em>2012-07-03-knitr-jekyll.Rmd</em>, available
<a href="https://github.com/jfisher-usgs/jfisher-usgs.github.com/blob/master/Rmd/2012-07-03-knitr-jekyll.Rmd">here</a>.
Steps taken to build this post are as follows:</p>

<h3>Step 1</h3>

<p>Create a Jekyll-Boostrap blog if you don&rsquo;t already have one.
A brief tutorial on building this blog is available
<a href="/lessons/2012/05/30/jekyll-build-on-windows/">here</a>.</p>

<h3>Step 2</h3>

<p>Open the R Console and process the source file:</p>

<p>{% highlight r %}
KnitPost &lt;&ndash; function(input, base.url = &ldquo;/&rdquo;) {</p>

<pre><code>require(knitr)
opts_knit$set(base.url = base.url)
fig.path &lt;- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
</code></pre>

<p>}
KnitPost(&ldquo;2012-07-03-knitr-jekyll.Rmd&rdquo;)
{% endhighlight %}</p>

<h3>Step 3</h3>

<p>Move the resulting image folder <em>2012-07-03-knitr-jekyll</em> and <strong>Markdown</strong> file
<em>2012-07-03-knitr-jekyll.md</em> to the local
<em>jfisher-usgs.github.com</em> <a href="http://git-scm.com/">git</a> repository.
The KnitPost function assumes that the image folder will be placed in a
<a href="https://github.com/jfisher-usgs/jfisher-usgs.github.com/tree/master/figs">figs</a>
folder located at the root of the repository.</p>

<h3>Step 4</h3>

<p>Add the following CSS code to the
<em>/assets/themes/twitter-2.0/css/bootstrap.min.css</em> file to center images:</p>

<pre><code>[alt=center] {
  display: block;
  margin: auto;
}
</code></pre>

<p>That&rsquo;s it.</p>

<hr />

<p>Here are a few examples of embedding R code:</p>

<p>{% highlight r %}
summary(cars)
{% endhighlight %}</p>

<p>{% highlight text %}</p>

<h2>speed           dist</h2>

<h2>Min.   : 4.0   Min.   :  2</h2>

<h2>1st Qu.:12.0   1st Qu.: 26</h2>

<h2>Median :15.0   Median : 36</h2>

<h2>Mean   :15.4   Mean   : 43</h2>

<h2>3rd Qu.:19.0   3rd Qu.: 56</h2>

<h2>Max.   :25.0   Max.   :120</h2>

<p>{% endhighlight %}</p>

<p>{% highlight r %}
par(mar = c(4, 4, 0.1, 0.1), omi = c(0, 0, 0, 0))
plot(cars)
{% endhighlight %}</p>

<p><img src="/figs/2012-07-03-knitr-jekyll/fig1.png" alt="center" /></p>

<h5>Figure 1: Caption</h5>

<p>{% highlight r %}
par(mar = c(2.5, 2.5, 0.5, 0.1), omi = c(0, 0, 0, 0))
filled.contour(volcano)
{% endhighlight %}</p>

<p><img src="/figs/2012-07-03-knitr-jekyll/fig2.png" alt="center" /></p>

<h5>Figure 2: Caption</h5>

<p>And don&rsquo;t forget your session information for proper reproducible research.</p>

<p>{% highlight r %}
sessionInfo()
{% endhighlight %}</p>

<p>{% highlight text %}</p>

<h2>R version 3.0.2 (2013-09-25)</h2>

<h2>Platform: i386-w64-mingw32/i386 (32-bit)</h2>

<h2></h2>

<h2>locale:</h2>

<h2>[1] LC_COLLATE=English_United States.1252</h2>

<h2>[2] LC_CTYPE=English_United States.1252</h2>

<h2>[3] LC_MONETARY=English_United States.1252</h2>

<h2>[4] LC_NUMERIC=C</h2>

<h2>[5] LC_TIME=English_United States.1252</h2>

<h2></h2>

<h2>attached base packages:</h2>

<h2>[1] stats     graphics  grDevices utils     datasets  methods   base</h2>

<h2></h2>

<h2>other attached packages:</h2>

<h2>[1] knitr_1.5</h2>

<h2></h2>

<h2>loaded via a namespace (and not attached):</h2>

<h2>[1] evaluate_0.5.1 formatR_0.10   stringr_0.6.2  tools_3.0.2</h2>

<p>{% endhighlight %}</p>
]]></content>
  </entry>
  
</feed>
