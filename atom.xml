<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Streaming Longitude]]></title>
  <link href="http://vinchinzu.github.io/atom.xml" rel="self"/>
  <link href="http://vinchinzu.github.io/"/>
  <updated>2014-02-10T13:42:18-06:00</updated>
  <id>http://vinchinzu.github.io/</id>
  <author>
    <name><![CDATA[Lucas Vinze]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HighCharts]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/10/highcharts/"/>
    <updated>2014-02-10T12:58:18-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/10/highcharts</id>
    <content type="html"><![CDATA[<script src="http://code.highcharts.com/stock/highstock.js"></script>


<script src="http://code.highcharts.com/stock/modules/exporting.js"></script>


<p>Methods for adding highcharts graphics into Octopress posts.</p>

<ul>
<li>Found from tutorial <a href="http://www.alexpotrykus.com/blog/2013/11/21/using-highcharts-and-highstocks-with-octopress/">here</a></li>
<li>Trick is to add Javascript library to source, and add link on post</li>
<li>Also add id &lsquo;container&rsquo; to render to.</li>
</ul>


<div id="container" style="height: 500px; min-width: 500px"></div>




<script>

$(function() {
    $.getJSON('http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-ohlcv.json&callback=?', function(data) {

        // split the data set into ohlc and volume
        var ohlc = [],
            volume = [],
            dataLength = data.length;
            
        for (i = 0; i < dataLength; i++) {
            ohlc.push([
                data[i][0], // the date
                data[i][1], // open
                data[i][2], // high
                data[i][3], // low
                data[i][4] // close
            ]);
            
            volume.push([
                data[i][0], // the date
                data[i][5] // the volume
            ])
        }

        // set the allowed units for data grouping
        var groupingUnits = [[
            'week',                         // unit name
            [1]                             // allowed multiples
        ], [
            'month',
            [1, 2, 3, 4, 6]
        ]];

        // create the chart
        $('#container').highcharts('StockChart', {
            
            rangeSelector: {
                selected: 1
            },

            title: {
                text: 'AAPL Historical'
            },

            yAxis: [{
                title: {
                    text: 'OHLC'
                },
                height: 200,
                lineWidth: 2
            }, {
                title: {
                    text: 'Volume'
                },
                top: 300,
                height: 100,
                offset: 0,
                lineWidth: 2
            }],
            
            series: [{
                type: 'candlestick',
                name: 'AAPL',
                data: ohlc,
                dataGrouping: {
                    units: groupingUnits
                }
            }, {
                type: 'column',
                name: 'Volume',
                data: volume,
                yAxis: 1,
                dataGrouping: {
                    units: groupingUnits
                }
            }]
        });
    });
});


</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hamilton Graphs]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/10/hamilton-graphs/"/>
    <updated>2014-02-10T12:46:21-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/10/hamilton-graphs</id>
    <content type="html"><![CDATA[<div><script src='https://gist.github.com/1703449.js'></script>
<noscript><pre><code>&lt;style type=&quot;text/css&quot;&gt;p {text-align:center;width: auto}&lt;/style&gt;
Created by [Christopher Manning](http://www.christophermanning.org/projects/building-cubic-hamiltonian-graphs-from-lcf-notation/)

Gallery
-------  
[![Axle](https://gist.github.com/christophermanning/1703449/raw/img/graph-axle.png &quot;Axle&quot;)](http://bl.ocks.org/d/1703449/#/[-48,-32,3,14,16,-37,-42,48]22/0/0)
[![Eight](https://gist.github.com/christophermanning/1703449/raw/img/graph-eight.png &quot;Eight&quot;)](http://bl.ocks.org/d/1703449/#/[25,50,75,100]100/0/0)
[![Fibbobaci](https://gist.github.com/christophermanning/1703449/raw/img/graph-fibonacci.png &quot;Fibonacci&quot;)](http://bl.ocks.org/d/1703449/#/[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169]43/0/1)
[![Florets](https://gist.github.com/christophermanning/1703449/raw/img/graph-florets.png &quot;Florets&quot;)](http://bl.ocks.org/d/1703449/#/[10,9,8,7,6,5,4,3,2,1]10/0/0)
[![Star](https://gist.github.com/christophermanning/1703449/raw/img/graph-star.png &quot;Star&quot;)](http://bl.ocks.org/d/1703449/#/[6,10]5/0/0)
[![Mosaic](https://gist.github.com/christophermanning/1703449/raw/img/graph-mosaic.png &quot;Mosaic&quot;)](http://bl.ocks.org/d/1703449/#/[500]1000/0/1)
[![Original](https://gist.github.com/christophermanning/1703449/raw/img/graph-original.png &quot;Original&quot;)](http://bl.ocks.org/d/1703449/#/[30,-2,2,21,-2,2,12,-2,2,-12,-2,2,-21,-2,2,30,-2,2,-12,-2,2,21,-2,2,-21,-2,2,12,-2,2]2/1/0)
[![Spiral](https://gist.github.com/christophermanning/1703449/raw/img/graph-spiral.png &quot;Spiral&quot;)](http://bl.ocks.org/d/1703449/#/[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]4/0/1)
[![Sun](https://gist.github.com/christophermanning/1703449/raw/img/graph-sun.png &quot;Sun&quot;)](http://bl.ocks.org/d/1703449/#/[-48,-45]21/0/0)
[![Pods](https://gist.github.com/christophermanning/1703449/raw/img/graph-pods.png &quot;Pods&quot;)](http://bl.ocks.org/d/1703449/#/[3553353424234324324]1022/0/0)

Controls
--------
  * Place your cursor near a number in the LCF code and use the up/down
    arrow or the mousewheel to increment or decrement that number. Hold down
    the control and or shift key to increment or decrement by 10 or 100. 

Interesting Graphs
------------------
  * [Stitching a Torus Together](?lcfCode=[10]100&amp;animationSpeed=1&amp;lockVertices=0)
  * [25 MÃ¶bius Ladder](?lcfCode=[-25]50&amp;animationSpeed=1&amp;lockVertices=0)
  * Please share interesting graphs you find: [@cmanning88](https://twitter.com/cmanning88)

References
----------
  * [Project Summary and Changelog](http://www.christophermanning.org/projects/building-cubic-hamiltonian-graphs-from-lcf-notation/)
  * [Wikipedia article on LCF notation](http://en.wikipedia.org/wiki/LCF_notation)
  * [Wolfram MathWorld article on LCF notation](http://mathworld.wolfram.com/LCFNotation.html)
  * [d3.js Force Layout](https://github.com/mbostock/d3/wiki/Force-Layout)

[Run this gist at bl.ocks.org](http://bl.ocks.org/1703449)
</code></pre></noscript></div>


<p>Build by Christopher Manning</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[D3 Map Tiles]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/10/d3-map-tiles/"/>
    <updated>2014-02-10T12:23:56-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/10/d3-map-tiles</id>
    <content type="html"><![CDATA[<script src="http://d3js.org/d3.v2.js"></script>


<p></p>

<script src="http://d3js.org/d3.geo.tile.v0.min.js"></script>




<div>
  <style type="text/css">

 .map {
  position: relative;
  overflow: hidden;
}

.layer {
  position: absolute;
}

.tile {
  pointer-events: none;
  position: absolute;
  width: 256px;
  height: 256px;
}

.info {
  position: absolute;
  bottom: 10px;
  left: 10px;
}

  </style>
</div>




<script type="text/javascript">

  var margin = {top: 40, right: 40, bottom: 40, left: 40},
      width = $('.entry-content').width(),
      height = 300;

  $(window).resize(function() {
    width = $('.entry-content').width();
  });

</script>




<div id='chart-1'></div>




<script>

var width = Math.max(960, window.innerWidth),
    height = Math.max(500, window.innerHeight),
    prefix = prefixMatch(["webkit", "ms", "Moz", "O"]);

var tile = d3.geo.tile()
    .size([width, height]);

var projection = d3.geo.mercator();

var zoom = d3.behavior.zoom()
    .scale(1 << 12)
    .scaleExtent([1 << 9, 1 << 23])
    .translate([width / 2, height / 2])
    .on("zoom", zoomed);

var map = d3.select("chart-1").append("div")
    .attr("class", "map")
    .style("width", width + "px")
    .style("height", height + "px")
    .call(zoom)
    .on("mousemove", mousemoved);

var layer = map.append("div")
    .attr("class", "layer");

var info = map.append("div")
    .attr("class", "info");

zoomed();

function zoomed() {
  var tiles = tile
      .scale(zoom.scale())
      .translate(zoom.translate())
      ();

  projection
      .scale(zoom.scale() / 2 / Math.PI)
      .translate(zoom.translate());

  var image = layer
      .style(prefix + "transform", matrix3d(tiles.scale, tiles.translate))
    .selectAll(".tile")
      .data(tiles, function(d) { return d; });

  image.exit()
      .remove();

  image.enter().append("img")
      .attr("class", "tile")
      .attr("src", function(d) { return "http://" + ["a", "b", "c", "d"][Math.random() * 4 | 0] + ".tiles.mapbox.com/v3/examples.map-vyofok3q/" + d[2] + "/" + d[0] + "/" + d[1] + ".png"; })
      .style("left", function(d) { return (d[0] << 8) + "px"; })
      .style("top", function(d) { return (d[1] << 8) + "px"; });
}

function mousemoved() {
  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));
}

function matrix3d(scale, translate) {
  var k = scale / 256, r = scale % 1 ? Number : Math.round;
  return "matrix3d(" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1 ] + ")";
}

function prefixMatch(p) {
  var i = -1, n = p.length, s = document.body.style;
  while (++i < n) if (p[i] + "Transform" in s) return "-" + p[i].toLowerCase() + "-";
  return "";
}

function formatLocation(p, k) {
  var format = d3.format("." + Math.floor(Math.log(k) / 2 - 2) + "f");
  return (p[1] < 0 ? format(-p[1]) + "Â°S" : format(p[1]) + "Â°N") + " "
       + (p[0] < 0 ? format(-p[0]) + "Â°W" : format(p[0]) + "Â°E");
}

</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Some Javascript]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/10/add-some-javascript/"/>
    <updated>2014-02-10T11:45:37-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/10/add-some-javascript</id>
    <content type="html"><![CDATA[<script src="http://d3js.org/d3.v2.js"></script>


<p></p>

<h2>See what can be done with Javascript:</h2>

<p>I wanted to add dynamic graphs on the static build with Jekyll and Octopress, and still be able to push directly from the terminal line. This seems like a decent solution to start with. The trick is:</p>

<ul>
<li>adding the style tags in a div at the top</li>
<li><p>adding the javascript source to d3 at the top of the post  <div>
<pre><code class='html'>&lt;script src=&quot;<a href="http://d3js.org/d3.v2.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;">http://d3js.org/d3.v2.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;</a></code></pre>
</div></p></li>
<li><p>Adjusting the margins and container sizes</p></li>
<li>add a div with ID to hold the graph</li>
</ul>


<p>Start with d3 library: with this tutorial <a href="http://robdodson.me/blog/2012/05/02/d3-js-and-octopress/">here</a></p>

<div>
  <style type="text/css">

    .chart {
      font-family: Arial, sans-serif;
      font-size: 10px;
      margin-top: -40px;
    }

    .bar {
      fill: steelblue;
    }

    .axis path, .axis line {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
    }

  </style>
</div>




<script type="text/javascript">

  var data = [6, 1, 2, 3, 5, 4];

  var margin = {top: 40, right: 40, bottom: 40, left: 40},
      width = $('.entry-content').width(),
      height = 300;

  $(window).resize(function() {
    width = $('.entry-content').width();
  });

</script>




<!-- D3.js Chart -->




<div id='chart-1'></div>


<script type='text/javascript'>
(function() {

  function draw() {

    $('#chart-1').empty();

    var x = d3.scale.linear()
        .domain([0, d3.max(data)])
        .range([0, width - margin.left - margin.right]);

    var y = d3.scale.ordinal()
        .domain(d3.range(data.length))
        .rangeRoundBands([height - margin.top - margin.bottom, 0], 0.2);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient('bottom')
        .tickPadding(8);

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient('left')
        .tickPadding(8)
        .tickSize(0);

    var svg = d3.select('#chart-1').append('svg')
        .attr('width', width)
        .attr('height', height)
        .attr('class', 'chart')
      .append('g')
        .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');

    svg.selectAll('.chart')
        .data(data)
      .enter().append('rect')
        .attr('class', 'bar')
        .attr('y', function(d, i) { return y(i) })
        .attr('width', x)
        .attr('height', y.rangeBand());

    svg.append('g')
        .attr('class', 'x axis')
        .attr('transform', 'translate(0, ' + y.rangeExtent()[1] + ')')
        .call(xAxis);

    svg.append('g')
        .attr('class', 'y axis')
        .call(yAxis)
      .selectAll('text')
        .text(function(d) { return String.fromCharCode(d + 65); });

  }

  draw();

  $(window).resize(function() {
    draw();
  });

})();
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[World Beer Trade]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/10/world-beer-trade/"/>
    <updated>2014-02-10T10:51:57-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/10/world-beer-trade</id>
    <content type="html"><![CDATA[<p>The graph below shows a network graph of international trade between nations for Beer.</p>

<p>Data is January 2013 from the UN Comtrade database.</p>

<p><img src="http://vinchinzu.github.io/figs/2014-02-10-world-beer-trade/tradeplot.png" alt="center" /></p>

<p><a href="http://vinchinzu.github.io/figs/2014-02-10-world-beer-trade/pdfplot.pdf">pdf download</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chinese the New Lingua Franca]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/10/chinese-the-new-lingua-franca/"/>
    <updated>2014-02-10T10:14:57-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/10/chinese-the-new-lingua-franca</id>
    <content type="html"><![CDATA[<p><meta http-equiv='Content-Type' content='text/html; charset=utf-8' /></p>

<h2>Is Chinese the Future Lingua Franca?</h2>

<p>by Lucas Vinze</p>

<p>I wrote this article in 2011 while working on my masters degree from Texas A&amp;M. I was studying at the Shanghai Institute of International Studies in Shanghai, China. The original work was written for the US Department of State&rsquo;s Virtual Internship program.</p>

<p>ä½èå¢å¡æ¯æ¯å¾·å·åå·¥å¤§å­¦å¸ä»å­¦é¢ç¡å£«ï¼ä¸æµ·å½éé®é¢ç ç©¶é¢
çå­¦çï¼æå¹´äºææ¯ä¸äºå½éæ¿æ²»ç»æµå­¦ä¸ä¸ã</p>

<p>ä¸­æä¼æ¯æªæ¥çå¨çè¯­è¨åï¼</p>

<p>æåæ¥å°ä¸æµ·å­¦å½éå³ç³»ã æè·æçä¸­å½åå­¦åæåå°±åªè½è¯´ä¸ç¹ç¹ä¸­æï¼èä¸åªæ¯åè¡¨è¾¾åºæ¬çæ³æ³ä¹ç±»çå¾ç®åçä¸­æã
æè¿ï¼ æè®¤è¯äºä¸ä½åè¨åæ¯å¦çæåï¼ ä»æ¯å°åºå®å¨ç ç©¶åã ä»ä¹å¯ä»¥è¯´åé¨è¯­è¨ï¼ä½æ¯ä»ä¸ä¼è¯´è±ææä»¥ æä»¬åªè½ç¨æ±è¯­äº¤æµã</p>

<p>æä»¬é½ä¸æ¯ä»¥æ±è¯­ä¸ºæ¯è¯­çäººï¼ å¯æ¯æä»¬å¯ä»¥äº¤æµçå¾å¥½ã</p>

<p>éçä¸­å½ç»æµçå¿«éåå±ï¼ææè§å°å°æ¥ä¸­å½åæ®éè¯å¯è½ä¼å¯¹å¨è¾¹å½å®¶äº§çéè¦çå½±åã
é£æ¶åä¸­å½å°åå±å°å¾é«çæ°´å¹³ï¼ä¸­å½äººä¼å¨å¨çèå´åäº§çæ´å¤çåä¸æ§ãé£äºè½ä¸ºä¸­å½ä»äºè·¨å¢ææ¸¸ååä¸æ´»å¨æå¡çå½å®¶å°ä¼ä»ä¸­è·å©ã</p>

<p>å°æ¥å¤å½çå­¦çæèåäººå¦ææ³æ´å¥½çåä¸­å½äººå±å¼åä¸æ´»å¨ï¼ä»ä»¬å¿é¡»å­¦ä¹ æ´å¤çä¸­æã è±è¯­å¨å¨çåä¸æ´»å¨ä¸­çä¸»å¯¼å°ä½å°åå°æ±è¯­çææã</p>

<p>æäºéè±è¯­å½å®¶çäººä¸è½å¾å¥½å°çè§£æè¯´çè±è¯­ï¼æä»¥æä¹éè¦æè±æçä½æ¯ä¸é¨å½éåè¯­è¨ï¼è¯çè¯´æ´å¤å®¹æè®©å«äººçè§£çè±è¯­ï¼èä¸æ¯åªæè±è¯­å½å®¶çäººææçä¿è¯­åæ¹è¨ã</p>

<p>æçä¸­æç¿»è¯åªæ¯ä¸ä¸ªæ¦è¦ï¼ æçä¸­æè¿ä¸è¶³ä»¥æ¸æ°çè¡¨è¾¾èªå·±çè§ç¹ã è¯·éè¯»è±æä»¥æ´å¥½å°äºè§£æçè§ç¹ã</p>

<p>I recently arrived in Shanghai to study at international affairs and economics at the Shanghai Institute of International Studies SIIS.  During the last few months in Shanghai, I&rsquo;ve discovered a new use for my burgeoning Chinese language skills. In the past, the only time that I spoke Chinese was to native Chinese speakers in somewhat limited exchanges such as explaining basic ideas to classmates or narrating simple stories or daily events.
Â 
Recently, however, I have become friends with another visiting fellow here at SIIS. We share a tiny corner office, live on the same floor of the hotel, and have the mutually bonding experience of being a Lao Wai (foreigner) in China. Being from Kazakhstan, my friend only speaks Russian, Kazakh, Uyghur and Chinese. With a few languages under my belt, I can usually get around, but given that he spoke no English or the other languages I have studied, Chinese became our common language.
Â 
Given that he is a scholar on regional security studies, he was capable of writing Chinese articles and giving lengthy discourses, but his spoken lexicon is simple enough that I could understand everything he said within a day or two. I&rsquo;m now reaching an intermediate level of Chinese with about 1000 characters and maybe 300-500 classroom hours.  I&rsquo;m starting to appreciate how difficult an endeavor it is to advance and how far I still am from reading a newspaper or having a discussion on anything of importance.
Â 
So, speaking Chinese with my Kazakh friend has been excellent language practice, but the exchange also brought to mind the interesting concept of what the world would look like with Chinese as a lingua franca. While I believe English has a firm foothold as a global language, despite the difficulty of learning the language, I believe Chinese will definitely spread more rapidly than many predict.
Â 
Soon China will spread its influence to neighboring countries and continents as the population of 1.3 billion Chinese have higher per capita incomes and increased mobility. Record numbers of Chinese are visiting the United States despite our cultural and geographic distances. Countries that cater to Chinese tourists will benefit from China&rsquo;s growing  economic might.</p>

<p>Soon China will spread its influence to neighboring countries and continents as the population of 1.3 billion Chinese have higher per capita incomes and increased mobility. Record numbers of Chinese are visiting the United States despite our cultural and geographic distances. Countries that cater to Chinese tourists will benefit from China&rsquo;s growing  economic might.
Â 
As Chinese multinational companies grow and develop competitive advantages on a global scale, perhaps that aspiring young manager from the United States or Brazil will need a high capacity in Mandarin to close the all-important business deal. Citizens of countries that are the recipients of Chinese investments will surely see a surge in the demand to understand and speak Mandarin Chinese.
Â 
Given these simple observations, I have two take-aways.</p>

<ol>
<li>The dominant position of the English language as an international medium should not be taken for granted.  At the least, Chinese will join English as an international business language. Future American business people, diplomats, and scholars may be at a disadvantage in the global marketplace if they can&rsquo;t speak Mandarin.
Â </li>
<li>I&rsquo;ve realized that I also need to think about English as an international language and use it that way rather than just speaking at my regular pace with slang and idioms when speaking to non-native English speakers.  I have realized my own English is not that easy to understand for many non-native speakers and have decided it might not hurt to take a speech course in International English or teaching English as a second language.</li>
</ol>


<p>Lucas Vinze is currently an exchange student at Shanghai Institute of International Studies, a Chinese international relations think tank. He is completing aÂ Masters of International Affairs and Economics at theÂ Bush School of Government and Public Service atÂ Texas A&amp;M University.Â </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trade Network Graphs]]></title>
    <link href="http://vinchinzu.github.io/blog/2014/02/05/trade-network-graphs/"/>
    <updated>2014-02-05T00:00:00-06:00</updated>
    <id>http://vinchinzu.github.io/blog/2014/02/05/trade-network-graphs</id>
    <content type="html"><![CDATA[<h3>Step 1</h3>

<p>Gather data from UN Comtrade.
  1. Choose your</p>

<p><a href="http://comtrade.un.org/monthly/Main/Data.aspx">here</a>
Create a log-in and account
This allows downloads of 5000 lines each, so each query has to be small enough to account for this.
Design the query based on exporter, importer, commodity (ies), period, and trade flow (import/export).
Search for the appropriate HTS codes for the commodity classification.</p>

<h3>Step 2</h3>

<p>Open the R Console and process the source file:</p>

<p>This script will directly process the csv file downloaded from Comtrade.</p>

<p>Change the query file as needed.</p>

<div>
  <pre><code class='r'>library(network)
library(plyr)

# setwd(&quot;./Downloads&quot;)

df = read.csv(&quot;QueryResults (34).csv&quot;, header = TRUE,
                   stringsAsFactors = FALSE)

## Take only the trade

Ex.df = subset(df,subset = TradeFlowDescription == &quot;Exports&quot;, 
                   c(&quot;ReporterDescription&quot;, &quot;PartnerDescription&quot;, &quot;Value&quot;))
Ex.df &lt;- Ex.df[!Ex.df$PartnerDescription == &quot;World&quot;,]
Ex.df &lt;- Ex.df[!Ex.df$ReporterDescription == &quot;EU-27&quot;,]

Ex.df$Value &lt;- Ex.df$Value/1000

## Sort the data and take only the top 80% of the trade
Ex.df = arrange(Ex.df, desc(Value))

Ex.df$sWine = scale(Ex.df$Value, center = FALSE)
Ex.df$cs = cumsum(as.numeric(Ex.df$Value))
Ex.df[Ex.df[, 1] == &quot;China, Hong Kong SAR &quot;, 1] = &quot;China, Hong Kong SAR&quot;

## Adjust Top Percentage to be included
Final.df = subset(Ex.df, cs &lt; tail(Ex.df$cs, 1) * 0.9)

## Set edge and arrow size
Final.df$edgeSize = with(Final.df, Value/sum(Value))
Final.df$arrowSize = ifelse(Final.df$edgeSize * 30 &lt; 0.5 , 0.5,
                                Final.df$edgeSize * 15)

## Create the network and plot
net = network(Final.df[, 1:2])
plot(net, displaylabels = TRUE, label.col = &quot;steelblue&quot;,
     edge.lwd = c(Final.df$edgeSize) * 100,
     arrowhead.cex = c(Final.df$arrowSize),
     label.cex = 0.5, vertex.border = &quot;white&quot;,
     vertex.col = &quot;skyblue&quot;, edge.col = rgb(0, 0, 0, alpha = 0.5))





pdf(file='pdfplot')
plot(net, displaylabels = TRUE, label.col = &quot;steelblue&quot;,
     edge.lwd = c(Final.df$edgeSize) * 100,
     arrowhead.cex = c(Final.df$arrowSize),
     label.cex = 0.5, vertex.border = &quot;white&quot;,
     vertex.col = &quot;skyblue&quot;, edge.col = rgb(0, 0, 0, alpha = 0.5))
dev.off()</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog With Knitr and Jekyll]]></title>
    <link href="http://vinchinzu.github.io/blog/2012/07/03/knitr-jekyll/"/>
    <updated>2012-07-03T00:00:00-05:00</updated>
    <id>http://vinchinzu.github.io/blog/2012/07/03/knitr-jekyll</id>
    <content type="html"><![CDATA[<p>The <a href="http://yihui.name/knitr/">knitr</a> package provides an easy way to embed
<a href="http://www.r-project.org/">R</a> code in a <a href="http://jekyllbootstrap.com/">Jekyll-Bootstrap</a>
blog post. The only required input is an <strong>R Markdown</strong> source file.
The name of the source file used to generate this post is <em>2012-07-03-knitr-jekyll.Rmd</em>, available
<a href="https://github.com/jfisher-usgs/jfisher-usgs.github.com/blob/master/Rmd/2012-07-03-knitr-jekyll.Rmd">here</a>.
Steps taken to build this post are as follows:</p>

<h3>Step 1</h3>

<p>Create a Jekyll-Boostrap blog if you don&rsquo;t already have one.
A brief tutorial on building this blog is available
<a href="http://vinchinzu.github.io/lessons/2012/05/30/jekyll-build-on-windows/">here</a>.</p>

<h3>Step 2</h3>

<p>Open the R Console and process the source file:</p>

<div>
  <pre><code class='r'>KnitPost &lt;- function(input, base.url = &quot;/&quot;) {
    require(knitr)
    opts_knit$set(base.url = base.url)
    fig.path &lt;- paste0(&quot;figs/&quot;, sub(&quot;.Rmd$&quot;, &quot;&quot;, basename(input)), &quot;/&quot;)
    opts_chunk$set(fig.path = fig.path)
    opts_chunk$set(fig.cap = &quot;center&quot;)
    render_jekyll()
    knit(input, envir = parent.frame())
}
KnitPost(&quot;2012-07-03-knitr-jekyll.Rmd&quot;)</code></pre>
</div>


<h3>Step 3</h3>

<p>Move the resulting image folder <em>2012-07-03-knitr-jekyll</em> and <strong>Markdown</strong> file
<em>2012-07-03-knitr-jekyll.md</em> to the local
<em>jfisher-usgs.github.com</em> <a href="http://git-scm.com/">git</a> repository.
The KnitPost function assumes that the image folder will be placed in a
<a href="https://github.com/jfisher-usgs/jfisher-usgs.github.com/tree/master/figs">figs</a>
folder located at the root of the repository.</p>

<h3>Step 4</h3>

<p>Add the following CSS code to the
<em>/assets/themes/twitter-2.0/css/bootstrap.min.css</em> file to center images:</p>

<pre><code>[alt=center] {
  display: block;
  margin: auto;
}
</code></pre>

<p>That&rsquo;s it.</p>

<hr />

<p>Here are a few examples of embedding R code:</p>

<div>
  <pre><code class='r'>summary(cars)</code></pre>
</div>




<div>
  <pre><code class='text'>##      speed           dist    
##  Min.   : 4.0   Min.   :  2  
##  1st Qu.:12.0   1st Qu.: 26  
##  Median :15.0   Median : 36  
##  Mean   :15.4   Mean   : 43  
##  3rd Qu.:19.0   3rd Qu.: 56  
##  Max.   :25.0   Max.   :120</code></pre>
</div>




<div>
  <pre><code class='r'>par(mar = c(4, 4, 0.1, 0.1), omi = c(0, 0, 0, 0))
plot(cars)</code></pre>
</div>


<p><img src="http://vinchinzu.github.io/figs/2012-07-03-knitr-jekyll/fig1.png" alt="center" /></p>

<h5>Figure 1: Caption</h5>

<div>
  <pre><code class='r'>par(mar = c(2.5, 2.5, 0.5, 0.1), omi = c(0, 0, 0, 0))
filled.contour(volcano)</code></pre>
</div>


<p><img src="http://vinchinzu.github.io/figs/2012-07-03-knitr-jekyll/fig2.png" alt="center" /></p>

<h5>Figure 2: Caption</h5>

<p>And don&rsquo;t forget your session information for proper reproducible research.</p>

<div>
  <pre><code class='r'>sessionInfo()</code></pre>
</div>




<div>
  <pre><code class='text'>## R version 3.0.2 (2013-09-25)
## Platform: i386-w64-mingw32/i386 (32-bit)
## 
## locale:
## [1] LC_COLLATE=English_United States.1252 
## [2] LC_CTYPE=English_United States.1252   
## [3] LC_MONETARY=English_United States.1252
## [4] LC_NUMERIC=C                          
## [5] LC_TIME=English_United States.1252    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] knitr_1.5
## 
## loaded via a namespace (and not attached):
## [1] evaluate_0.5.1 formatR_0.10   stringr_0.6.2  tools_3.0.2</code></pre>
</div>



]]></content>
  </entry>
  
</feed>
